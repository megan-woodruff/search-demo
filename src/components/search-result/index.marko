class {
  onCreate() {
    this.state = { imageLoaded: false };
  }
  onMount() {
    const imgElem = document.getElementById(`${this.input.id}-img`);
    this.setState("imageLoaded", imgElem?.complete);
  }
  onImageLoaded() {
    this.setState("imageLoaded", true);
  }
}
<a.search-result href=input.url target="_blank">
  <div.search-result-image-container>
    <img
      on-load("onImageLoaded")
      id=`${input.id}-img`
      class=["search-result-image", { loaded: state.imageLoaded }]
      src=(input.src.medium)
      alt=input.alt
    >
  </div>
  <p.photographer>${input.photographer}</p>
  <p.dimensions>${input.width} x ${input.height}</p>
</a>
style {
  .search-result {
    display: block;
    text-decoration: none;
    border: none;
    background-color: white;
    cursor: pointer;
    flex: 0 0 25%;
    padding: 1%;
  }

  @media only screen and (max-width: 800px) {
    .search-result {
      flex: 0 0 50%;
      padding: 2%;
    }
  }

  .search-result,
  .search-result-image {
    transition: 0.25s all ease-out;
  }

  .photographer,
  .dimensions {
    margin: 8px 0;
  }

  .photographer {
    font-weight: 600;
    color: #222222;
  }

  .dimensions {
    font-weight: 400;
    color: #555555;
    font-size: 0.9rem;
  }

  .search-result-image-container {
    width: 100%;
    background-color: rgb(0 0 0 / 4%);
    aspect-ratio: 1;
  }

  .search-result-image {
    width: 100%;
    height: 100%;
    opacity: 0;
    object-fit: cover;
    border-radius: 4px;
  }

  .search-result-image.loaded {
    opacity: 1;
  }

  .search-result:hover {
    transform: translateY(-2px);
  }
}
